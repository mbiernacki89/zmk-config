/*
  ╭────────────────────────╮ ╭────────────────────────╮
  │  0   1   2   3   4   5 │ │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
              ╰────────────╯ ╰────────────╯            
*/


#define FINGER_KEYS_LEFT  0 1 2 3 4  5  12 13 14 15 16 17 24 25 26 27 28 29
#define FINGER_KEYS_RIGHT 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMB_KEYS_LEFT 36 37 38
#define THUMB_KEYS_RIGHT 39 40 41

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <160>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <FINGER_KEYS_RIGHT THUMB_KEYS_RIGHT THUMB_KEYS_LEFT>;
            hold-trigger-on-release;
        };
         hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <FINGER_KEYS_LEFT THUMB_KEYS_RIGHT THUMB_KEYS_LEFT>;
            hold-trigger-on-release;
        };
        hmq: homerow_quote {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_QUOTE";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&kp>, <&qtg>;
            hold-trigger-key-positions = <FINGER_KEYS_LEFT THUMB_KEYS_RIGHT THUMB_KEYS_LEFT>;
            hold-trigger-on-release;
        };
        com2: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dot2: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        quex: question_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        qtg: quote_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "QUOTE_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp GRAVE>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };
};